C51 COMPILER V9.60.0.0   MAIN                                                              04/25/2022 04:30:51 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\MAIN.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE MAIN.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\MAIN.ls
                    -t) TABS(2) OBJECT(.\Objects\MAIN.obj)

line level    source

   1          /*********************************************************************************
   2          * 【编写时间】： 2014年3月5日
   3          * 【作    者】： 清翔电子:03
   4          * 【版    本】： 1.0
   5          * 【网    站】： http://www.qxmcu.com/ 
   6          * 【淘宝店铺】： http://qxmcu.taobao.com/ 
   7          * 【实验平台】： QX-MCS51 单片机开发板
   8          * 【外部晶振】： 11.0592mhz 
   9          * 【主控芯片】： STC89C52
  10          * 【编译环境】： Keil μVisio3  
  11          * 【程序功能】：                                    
  12          * 【使用说明】： 液晶1脚接1602黑色排母的1脚  如果是无背光的液晶只有14个脚 排母右边空2个位   
  13                           请把液晶对比度电位器顺时针调制10点钟方向，请勿多调超出极限位置会损坏电位器！
  14          *  说明：免费开源，不提供源代码分析.
  15          **********************************************************************************/
  16           
  17          /************************************************************************
  18          * 描述：（用串口调试助手软件观察）                                      
  19          *   主机发送0123456789abcdef给单片机，单片机接收到数据后发送QX-MCU789abcdef给主机。   
  20          *   LCD1602上显示    0123456789abcdef 
  21          *   LCD1602显示接收数据的ASCII码。  波特率9600    发送和接收都要选择为文本格式                  
  22          *   注：当单片机收到数据只有凑够16个时才会一次在液晶上显示出来        
  23          ************************************************************************/
  24          
  25          #include <reg52.h>
  26          #include <intrins.h>
  27            
  28          #define uchar  unsigned char 
  29          #define uint   unsigned int
  30          
  31          sbit LCD_RS = P3^5;
  32          sbit LCE_RW = P3^6;             
  33          sbit LCD_EN = P3^4;
  34          
  35          unsigned char pwm_motor_val = 254;//左右电机占空比值 取值范围0-170，0最快
  36          unsigned char pwm_t;//周期
  37          
  38          sbit _4IN = P1^0;//
  39          sbit BIN = P1^1;//
  40          sbit key_s2 = P3^2;
  41          sbit key_s3 = P3^3;
  42          
  43          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  44          
  45          
  46          
  47          
  48          
  49          uchar data  RXDdata[ ] = {0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
  50                                    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20 };
  51          uchar temp,buf,m,count;
  52          
  53          bit   playflag=0;
  54          
C51 COMPILER V9.60.0.0   MAIN                                                              04/25/2022 04:30:51 PAGE 2   

  55          
  56          
  57          /*********************************************************
  58          
  59            串行中断服务函数
  60          
  61          *********************************************************/
  62          void  serial() interrupt 4 
  63          {
  64   1         ES = 0;                //关闭串行中断
  65   1         RI = 0;                //清除串行接受标志位
  66   1         buf = SBUF;            //从串口缓冲区取得数据
  67   1           
  68   1      //   switch(buf)
  69   1      //   {
  70   1      //      case 0x01:  senddata('1');wen=1;break;  //接受到1，发送字符'Q'给计算机         
  71   1      //      case 0x02:  senddata('2');wen=2;break;  //接受到2，发送字符'X'给计算机       
  72   1      //      case 0x03:  senddata('3');wen=3;break;  //接受到3，发送字符'-'给计算机       
  73   1      //      case 0x04:  senddata('4');wen=4;break;  //接受到4，发送字符'M'给计算机       
  74   1      //      case 0x05:  senddata('5');wen=5;break;  //接受到5，发送字符'C'给计算机           
  75   1      //      case 0x06:  senddata('6');wen=6;break;  //接受到5，发送字符'U'给计算机
  76   1      //      case 0x07:  senddata('7');wen=7;break;  //接受到1，发送字符'Q'给计算机         
  77   1      //      case 0x08:  senddata('8');wen=8;break;  //接受到2，发送字符'X'给计算机       
  78   1      //      case 0x09:  senddata('9');wen=9;break;  //接受到3，发送字符'-'给计算机       
  79   1      //      case 0x00:  senddata('0');wen=0;break;  //接受到4，发送字符'M'给计算机             
  80   1      //      default:    senddata(buf);wen=0;break;  //接受到其它数据，将其发送给计算机         
  81   1      //   }
  82   1      //   if(wen_wei==0)
  83   1      //   {
  84   1      //     
  85   1      //     z_wen=wen*10;
  86   1      //     wen_wei=1;
  87   1      //     
  88   1      //   }else{
  89   1      //     //30  0   90 255
  90   1      //    pwm_motor_val=-3.22*(wen+z_wen)+190.6;    
  91   1      //      wen_wei=0;
  92   1      //   }
  93   1      
  94   1      
  95   1         if(buf!=0x0D)
  96   1         {   
  97   2           if(buf!=0x0A)
  98   2           { 
  99   3             temp =buf;
 100   3             if(count<2)
 101   3             {         
 102   4               RXDdata[count]=temp;
 103   4               count++;
 104   4           if(count==2)
 105   4            playflag=1;
 106   4             }
 107   3           } 
 108   2         }
 109   1         ES = 1;    //允许串口中断
 110   1      }
 111          int wen=0;
 112          int wen_1=0;
 113          int i=0;
 114          /*********************************************************
 115          
 116            数据显示函数
C51 COMPILER V9.60.0.0   MAIN                                                              04/25/2022 04:30:51 PAGE 3   

 117          
 118          *********************************************************/
 119          void  play()
 120          {
 121   1         if(playflag)
 122   1         { 
 123   2      
 124   2        
 125   2           for(m=0;m<2;m++)
 126   2           {
 127   3             wen=(int)RXDdata[m];
 128   3             
 129   3             if(m==0)
 130   3             {
 131   4               wen_1=wen*10;
 132   4      
 133   4             }else if(m==1){
 134   4               pwm_motor_val=(int)(255-2.4*(wen_1+wen));
 135   4            
 136   4             }
 137   3          //   lcd_pos(0x40+m);       //设置显示位置为第二行
 138   3            
 139   3          
 140   3           }
 141   2      
 142   2           playflag=0;              
 143   2           count=0x00;
 144   2      
 145   2           for(m=0;m<2;m++)      
 146   2           {
 147   3          RXDdata[m]=0x20;         //清显存单元    
 148   3      
 149   3         }
 150   2         }               
 151   1      }
 152          
 153          /*********************************************************
 154          
 155            主函数
 156          
 157          *********************************************************/
 158          void main(void) 
 159          {
 160   1          P0 = 0xff;
 161   1          P2 = 0xff;         
 162   1          
 163   1          SCON=0x50;           //设定串口工作方式
 164   1          PCON=0x00;           //波特率不倍增
 165   1            
 166   1          TMOD=0x20;           //定时器1工作于8位自动重载模式, 用于产生波特率
 167   1          EA=1;
 168   1          ES = 1;              //允许串口中断
 169   1          TL1=0xfd;
 170   1          TH1=0xfd;             //波特率9600
 171   1          TR1=1;
 172   1        
 173   1        //PWM
 174   1          TMOD |= 0x02;//8位自动重装模块
 175   1          TH0 = 220;
 176   1          TL0 = 220;//11.0592M晶振下占空比最大比值是256,输出100HZ
 177   1          TR0 = 1;//启动定时器0
 178   1          ET0 = 1;//允许定时器0中断
C51 COMPILER V9.60.0.0   MAIN                                                              04/25/2022 04:30:51 PAGE 4   

 179   1          EA  = 1;//总中断允许
 180   1        
 181   1        
 182   1      
 183   1          BIN=0;
 184   1          while(1)        
 185   1          {
 186   2            play();     
 187   2                  
 188   2          }
 189   1      }
 190          
 191          //定时器0中断
 192          void timer0() interrupt 1
 193          {
 194   1        pwm_t++;
 195   1        if(pwm_t == 255)
 196   1          _4IN = 0;
 197   1        if(pwm_motor_val == pwm_t)
 198   1          _4IN = 1;          
 199   1      }
 200          /*********************************************************/ 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
